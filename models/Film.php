<?php

namespace app\models;


use app\modules\movie\models\Actors;
use yii\web\UploadedFile;

/**
 * This is the model class for table "film".
 *
 * @property int $id_film
 * @property string|null $title
 * @property int|null $year
 * @property string $duration
 * @property string $age_limit
 * @property string $producer
 * @property string|null $image
 * @property string|null $video
 * @property string $description
 * @property int $id_cat
 *
 * @property Actfilm[] $actfilms
 * @property Category $cat
 * @property UserRating[] $userRatings
 */
class Film extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'film';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['year', 'id_cat'], 'integer'],
            [['duration', 'age_limit', 'producer', 'description', 'id_cat'], 'required'],
            [['title', 'duration', 'age_limit', 'image', 'video'], 'string', 'max' => 255],
            [['description'], 'string'],
            [['producer'], 'string', 'max' => 50],
            [['id_cat'], 'exist', 'skipOnError' => true, 'targetClass' => Category::class, 'targetAttribute' => ['id_cat' => 'id_category']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id_film' => 'ID',
            'title' => 'Название',
            'year' => 'Год выпуска',
            'duration' => 'Продолжительность',
            'age_limit' => 'Возратной лимит',
            'producer' => 'Продюсер',
            'image' => 'Постер',
            'video' => 'Видео',
            'description' => 'Описание',
            'id_cat' => 'Категория',
        ];
    }

    /**
     * Gets query for [[Actfilms]].
     *
     * @return \yii\db\ActiveQuery
     * @throws \yii\base\InvalidConfigException
     */
    public function getActfilms()
    {
//        return $this->hasMany(Actfilm::class, ['id_f' => 'id_film']);
        return $this->hasMany(Actors::className(),['id_actor'=>'id_a'])->viaTable('actfilm', ['id_f' => 'id_film']);
    }

    /**
     * Gets query for [[Cat]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getCat()
    {
        return $this->hasOne(Category::class, ['id_category' => 'id_cat']);
    }

    /**
     * Gets query for [[UserRatings]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUserRatings()
    {
        return $this->hasMany(UserRating::class, ['id_film' => 'id_film']);
    }

    public function saveImage($filename)
    {
        $this->image = $filename;
        return $this->save(false);
    }

    public function getImage()
    {
        return ($this->image) ? '/images/' . $this->image : '/images/no-image.jpg';
    }
    public function deleteImage()
    {
        $imageUploadModel = new ImageUpload();
        $imageUploadModel->deleteCurrentImage($this->image);
    }
    public function beforeDelete()
    {
        $this->deleteImage();
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }


}
